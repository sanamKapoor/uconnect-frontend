{"version":3,"sources":["Layout/Pages/CreatePost.js","Layout/components/Modal/ModalHeader.js","redux/actions/userActions.js","Layout/components/Common/UIElements/MediaUploader.js","Layout/components/Common/CreatePostForm.js","Layout/components/Modal/CreatePostModal.js","Layout/components/Common/MainNavLinks.js","Layout/components/Common/MainHeader.js"],"names":["CreatePost","dispatch","useDispatch","userId","useSelector","state","auth","modal","modalSuccessMsg","showSuccessToast","modalErrorMsg","useEffect","fetchUserData","modalError","timer","setTimeout","modalMsg","showSuccessToastFun","clearTimeout","className","msg","parent","ModalHeader","user","src","image","width","height","classes","username","userLoading","isLoading","type","Actions","payload","userErrors","err","userSuccess","getUsers","users","getUser","updateUser","updateOtherUser","url","method","body","headers","token","localStorage","getItem","fetch","process","res","json","data","ok","Error","message","ImageUploader","mediaFile","fileHandler","disable","filePickerRef","createRef","name","ref","style","accept","onChange","disabled","onClick","current","click","CreatePostForm","formRef","modalLoading","useState","modalHeight","setModalHeight","caption","setCaption","setMediaFile","mediaUrl","setMediaUrl","mediaId","setMediaId","mediaName","setMediaName","setDisable","document","querySelector","clientHeight","onSubmit","e","preventDefault","showErrorToastFun","postData","JSON","stringify","fileName","filePath","creator","backendReqModal","inputName","inputText","inputType","inputValue","onChangeHandler","target","value","minLength","maxLength","checkText","files","length","file","FormData","append","then","secure_url","public_id","catch","CreatePostModal","show","onHide","Modal","aria-labelledby","centered","Header","closeButton","Title","id","Body","MainNavLinks","createPost","setCreatePost","to","logOutUser","MainHeader","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label"],"mappings":"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","file":"static/js/11.356f8b65.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport MainHeader from '../components/Common/MainHeader'\r\nimport CreatePostForm from '../components/Common/CreatePostForm'\r\nimport ShowToast from '../components/Common/UIElements/ShowToast'\r\n\r\nimport { fetchUserData } from '../../redux/actions/userActions'\r\nimport { modalError, modalMsg, showSuccessToastFun } from '../../redux/actions/modalActions'\r\n\r\nfunction CreatePost() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { userId } = useSelector(state => state.auth)\r\n    const { modalSuccessMsg, showSuccessToast, modalErrorMsg } = useSelector(state => state.modal);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchUserData(`/user/${userId}`))\r\n        dispatch(modalError(''))\r\n    }, [dispatch, userId])\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          modalErrorMsg && dispatch(modalError(''))\r\n          modalSuccessMsg && dispatch(modalMsg(''))\r\n          !showSuccessToast && dispatch(showSuccessToastFun(true))\r\n        }, 2000)\r\n  \r\n        return () => {\r\n          clearTimeout(timer);\r\n        }\r\n      }, [dispatch, modalSuccessMsg, showSuccessToast, modalErrorMsg])\r\n\r\n    return (\r\n        <>\r\n            <MainHeader />\r\n            <div className=\"pt-5\"></div>\r\n            { (modalSuccessMsg && showSuccessToast) && <ShowToast msg={modalSuccessMsg} />} \r\n            <div className=\"container search-and-suggested-users my-5\">\r\n                <div className=\"suggested-users shadow p-3 rounded-lg\">\r\n                    <h5 className=\"text-center text-muted mb-3\">Create Post</h5>\r\n                    <CreatePostForm userId={userId} parent=\"page\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ShowImage from '../Common/UIElements/ShowImage';\r\n\r\nfunction ModalHeader() {\r\n    const  { user } = useSelector(state => state.user);\r\n    \r\n    return (\r\n        <>\r\n            <ShowImage src={user.image} width=\"30\" height=\"30\" classes=\"rounded-circle mr-1\" /> <span>{user.username}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalHeader\r\n","import * as Actions from '../types/userTypes';\r\n\r\nconst userLoading = (isLoading) => {\r\n    return {\r\n        type: Actions.USER_LOADING,\r\n        payload: isLoading\r\n    }   \r\n}\r\n\r\nexport const userErrors = (err) => {\r\n    return {\r\n        type: Actions.USER_ERRORS,\r\n        payload: err\r\n    }   \r\n}\r\n\r\nconst userSuccess = msg => {\r\n    return {\r\n        type: Actions.USER_SUCCESS_MSG,\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const getUsers = (users) => {\r\n    return {\r\n        type: Actions.GET_USERS,\r\n        payload: users\r\n    }   \r\n}\r\n\r\nexport const getUser = (user) => {\r\n    return {\r\n        type: Actions.GET_USER,\r\n        payload: user\r\n    }   \r\n}\r\n\r\nexport const updateUser = (user) => {\r\n    return {\r\n        type: Actions.UPDATE_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const updateOtherUser = user => {\r\n    return {\r\n        type: Actions.UPDATE_OTHER_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\n//      Backend End-Point\r\nexport const fetchUserData = (url, method = 'GET', body = null, headers) => async dispatch => {\r\n\r\n    if(method === 'GET'){\r\n        dispatch(userLoading(true));\r\n    }\r\n    try {\r\n        const token = localStorage.getItem('jwtToken');\r\n\r\n        const res = await fetch(process.env.REACT_APP_BACKEND_URL + url, {\r\n            method,\r\n            body,\r\n            headers: {\r\n                ...headers,\r\n                'Authorization': 'Bearer ' + token \r\n            }\r\n        })   \r\n\r\n        const data = await res.json();\r\n\r\n        if(!res.ok){\r\n            throw new Error(data.message)\r\n        }\r\n\r\n        dispatch(userLoading(false));\r\n\r\n        const { users, user, msg } = data;\r\n\r\n        if(users){\r\n            dispatch(getUsers(users))\r\n        }\r\n        if(user){\r\n            dispatch(getUser(user))\r\n        }\r\n        if(!user && !users && msg){\r\n            dispatch(userSuccess(msg))\r\n        }\r\n    } catch (err) {\r\n        dispatch(userLoading(false))\r\n        err.message ? dispatch(userErrors(err.message)) : dispatch(userErrors(err))\r\n    }\r\n}\r\n","import React, { createRef } from 'react'\r\n\r\nfunction ImageUploader({mediaFile, fileHandler, disable}) {\r\n    const filePickerRef = createRef();\r\n\r\n    const pickerFileHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-upload my-2 my-sm-3\">\r\n            <span className=\"text-muted text-center px-2\">\r\n                { mediaFile ? mediaFile.name : 'Select any image file' }\r\n            </span>\r\n            <input \r\n                type=\"file\"\r\n                ref={filePickerRef}\r\n                style={{\"display\": \"none\"}}\r\n                accept=\".jpg,.jpeg,.png\"\r\n                onChange={fileHandler}\r\n                />\r\n            <button type=\"button\" disabled={disable} onClick={pickerFileHandler} className=\"btn btn-secondary btn-sm my-2\">Upload</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUploader\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { backendReqModal, modalError, showErrorToastFun, showSuccessToastFun } from '../../../redux/actions/modalActions';\r\n\r\nimport ImageUploader from './UIElements/MediaUploader';\r\nimport Loading from './UIElements/Loading';\r\nimport InputElement from './UIElements/InputElement';\r\n\r\nfunction CreatePostForm({userId, parent}) {\r\n\r\n    const formRef = createRef();\r\n    const dispatch = useDispatch();\r\n    const { modalLoading, modalErrorMsg, modalSuccessMsg } = useSelector(state => state.modal);\r\n\r\n    const [modalHeight, setModalHeight] = useState(0);\r\n    const [caption, setCaption] = useState('');\r\n    const [mediaFile, setMediaFile] = useState(null);\r\n    const [mediaUrl, setMediaUrl] = useState('');\r\n    const [mediaId, setMediaId] = useState('');\r\n    const [mediaName, setMediaName] = useState('');\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let height;\r\n        if(parent === 'modal'){\r\n            height = document.querySelector('.modal-body').clientHeight;\r\n        } else {\r\n            height = document.querySelector('form').clientHeight;\r\n        }\r\n        setModalHeight(height)\r\n    }, [parent])\r\n\r\n    useEffect(() => {\r\n        if(modalErrorMsg === '' && modalSuccessMsg !== ''){\r\n            setCaption('')\r\n            setMediaFile(null)\r\n        }\r\n\r\n    }, [modalErrorMsg, modalSuccessMsg])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(showErrorToastFun(false));\r\n        dispatch(showSuccessToastFun(true));\r\n\r\n        const postData = JSON.stringify({\r\n            caption,\r\n            mediaFile: {\r\n                mediaId: mediaId,\r\n                fileName: mediaName,\r\n                filePath: mediaUrl\r\n            },\r\n            creator: userId\r\n        })\r\n\r\n        dispatch(backendReqModal('/post/create', 'POST', postData, {\r\n            'Content-Type': 'application/json'\r\n        }));\r\n\r\n    }\r\n\r\n    const fileHandler = e => {\r\n        if(e.target.files && e.target.files.length === 1){\r\n\r\n            setMediaFile(e.target.files[0])\r\n            const file = e.target.files[0];\r\n\r\n            if(file.type === \"image/jpg\" || file.type === \"image/png\" || file.type === \"image/jpeg\") {\r\n\r\n            setDisable(true);\r\n            const data = new FormData()\r\n            data.append(\"file\", file)\r\n            data.append(\"upload_preset\", process.env.REACT_APP_PRESET)\r\n            data.append(\"cloud_name\", process.env.REACT_APP_CLOUD_NAME)\r\n\r\n            fetch(`${process.env.REACT_APP_CLOUDINARY_URL}/${process.env.REACT_APP_CLOUD_NAME}/image/upload`, {\r\n                method:\"post\",\r\n                body: data\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMediaUrl(data.secure_url)\r\n                setMediaId(data.public_id)\r\n                setMediaName(file.name)\r\n                setDisable(false);\r\n                dispatch(modalError(''))\r\n            })\r\n            .catch(err=> {\r\n                dispatch(modalError('Something went wrong'))\r\n            })\r\n         } else {\r\n            dispatch(modalError('Invalid file type'))\r\n            return;\r\n         }\r\n        }\r\n    }\r\n\r\n\r\n    if(modalLoading){\r\n        return <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{height: `${modalHeight}px`}}>\r\n            <Loading />\r\n            <span className=\"my-2\">Please wait...</span>\r\n        </div>\r\n    } else {\r\n        return (\r\n        <form className=\"form p-0 p-sm-2 text-center\" ref={formRef} onSubmit={submitHandler}>\r\n            <InputElement \r\n                inputName=\"caption\"\r\n                inputText=\"Caption\"\r\n                inputType=\"text\"\r\n                inputValue={caption}\r\n                onChangeHandler={e => setCaption(e.target.value)}\r\n                classes=\"form-control\"\r\n                minLength=\"5\"\r\n                maxLength=\"200\"\r\n                checkText={true} \r\n            />\r\n            <ImageUploader \r\n                mediaFile={mediaFile}\r\n                fileHandler={fileHandler}\r\n                disable={disable}\r\n            />\r\n            { \r\n            (modalErrorMsg) && \r\n                <span className=\"text-danger my-2\"> \r\n                    {modalErrorMsg === 'Invalid value' ? 'Please provide both fields' : modalErrorMsg}\r\n                </span>\r\n             }\r\n            <button type=\"submit\" disabled={disable} className=\"btn btn-secondary btn-block mt-2 mt-sm-3\">\r\n                { disable ? 'Please wait...' : 'Create Post'}\r\n            </button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nexport default CreatePostForm\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport ModalHeader from './ModalHeader';\r\nimport CreatePostForm from '../Common/CreatePostForm';\r\nimport { useEffect } from 'react';\r\nimport { showSuccessToastFun, showErrorToastFun } from '../../../redux/actions/modalActions';\r\n\r\nfunction CreatePostModal({ show, onHide }) {\r\n  \r\n    const dispatch = useDispatch();\r\n    const { userId } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n      if(show){\r\n        dispatch(showErrorToastFun(false))\r\n        dispatch(showSuccessToastFun(true))\r\n      } else {\r\n        dispatch(showErrorToastFun(true))\r\n        dispatch(showSuccessToastFun(false))\r\n      }\r\n    }, [show, dispatch])\r\n\r\n    return (\r\n      <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"h6\" id=\"contained-modal-title-vcenter\">\r\n            <ModalHeader />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CreatePostForm userId={userId} parent=\"modal\" />\r\n        </Modal.Body>\r\n      </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n export default CreatePostModal;","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CreatePostModal from '../Modal/CreatePostModal';\r\nimport { logOutUser } from '../../../redux/actions/authActions';\r\n\r\nfunction MainNavLinks() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [createPost, setCreatePost] = useState(false);\r\n    const { userId } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n      dispatch(logOutUser())\r\n      fetch('/auth/logout');\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <div className=\"d-none d-lg-flex\">\r\n            <li className=\"nav-item\">\r\n              <span className=\"nav-link icon mx-2 btn\">\r\n                <i className=\"fas fa-upload fa-1x\" onClick={() => setCreatePost(true)}></i>\r\n              </span>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to={`/profile/${userId}`} className=\"nav-link icon mx-2\">\r\n                <i className=\"far fa-user fa-1x\"></i>\r\n              </NavLink>\r\n            </li>\r\n          </div>\r\n            <li className=\"nav-item align-self-center\">\r\n                <span className=\"nav-link mx-2 pointer\" onClick={logoutHandler}>\r\n                    Logout\r\n                </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <CreatePostModal \r\n          show={createPost}\r\n          onHide={() => setCreatePost(false)}\r\n          />\r\n      </>\r\n    )\r\n}\r\n\r\nexport default MainNavLinks\r\n","import React from 'react'\r\nimport MainNavLinks from './MainNavLinks'\r\n\r\nfunction MainHeader() {\r\n    return (\r\n    <header className=\"shadow-sm\">\r\n      <nav className=\"navbar navbar-expand navbar-light container-fluid container-md\">\r\n        <a className=\"navbar-brand font-weight-bold\" href=\"/\">UConnect </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <MainNavLinks />\r\n      </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default MainHeader\r\n"],"sourceRoot":""}