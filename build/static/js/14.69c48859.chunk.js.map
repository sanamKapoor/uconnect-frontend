{"version":3,"sources":["Layout/Pages/ResetPassword.js","Layout/components/Common/UIElements/ShowToast.js","Layout/components/Common/UIElements/AuthEssentials.js"],"names":["ResetPassword","token","useParams","heading","btnText","inputText","icon","forWhat","url","showInputs","backToLogin","ShowToast","msg","useState","show","setShow","aria-live","aria-atomic","style","position","zIndex","top","right","className","onClose","delay","autohide","Body","AuthEssentials","txt","dispatch","useDispatch","useSelector","state","auth","authSuccess","loading","authError","email","setEmail","password","setPassword","redirect","setRedirect","useEffect","authErrorMsg","authSuccessMsg","timmer","setTimeout","clearTimeout","window","location","href","type","value","onChange","e","target","placeholder","onClick","trim","formData","JSON","stringify","authEndPoint"],"mappings":"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","file":"static/js/14.69c48859.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AuthEssentials from '../components/Common/UIElements/AuthEssentials';\r\n\r\nfunction ResetPassword() {\r\n\r\n    const { token } = useParams();\r\n    \r\n    return (\r\n        <AuthEssentials \r\n            heading=\"Reset Password\"\r\n            btnText=\"Reset Password\"\r\n            inputText={token ? 'Password' : 'Email'}\r\n            icon=\"fas fa-lock\"\r\n            token={token}\r\n            forWhat={token ? 'new-password' : 'reset-password-link' }\r\n            url={token ? '/auth/resetPassword' : '/auth/forgetPassword'}\r\n            showInputs={true}\r\n            backToLogin={token ? true : false}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nfunction ShowToast({msg}) {\r\n\r\n    const [show, setShow] = useState(true);\r\n    \r\n    return (\r\n      <div aria-live=\"polite\" aria-atomic=\"true\" style={{ position: 'absolute', zIndex: 100}}>\r\n        <div style={{position: 'fixed', top: '3%', right: '3%'}} className=\"shadow\">\r\n          <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide className=\"bg-danger rounded-lg\">\r\n            <Toast.Body className=\"text-light px-3 px-sm-4\">\r\n             <span>{msg}</span>\r\n            </Toast.Body>\r\n          </Toast>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ShowToast\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { authErrorMsg, authSuccessMsg, authEndPoint } from '../../../../redux/actions/authActions';\r\nimport ShowToast from './ShowToast';\r\n\r\nfunction AuthEssentials({ icon, heading, inputText, btnText, txt, token, url, forWhat, showInputs, backToLogin }) {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, authSuccess, authError } = useSelector(state => state.auth);\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(authErrorMsg(''))\r\n        dispatch(authSuccessMsg(''))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if(authSuccess !== '' && authError === ''){\r\n            setEmail('')\r\n            setPassword('')\r\n        }\r\n    }, [authSuccess, authError])\r\n\r\n    useEffect(() => {\r\n        const timmer = setTimeout(() => {\r\n            authError && dispatch(authErrorMsg(''))\r\n            authSuccess && dispatch(authSuccessMsg(''))\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timmer)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const timmer = setTimeout(() => {\r\n            if(redirect && backToLogin){\r\n                window.location.href = '/login'\r\n            }\r\n        }, 3300);\r\n\r\n        return () => {\r\n            clearTimeout(timmer)\r\n        }\r\n    }, [redirect, backToLogin])\r\n\r\n    const activeAccount = () => {\r\n        if(inputText === 'Email' && email.trim() === '') return;\r\n        if(inputText === 'Password' && password.trim() === '') return;\r\n\r\n        let formData; \r\n        switch(forWhat){\r\n            case 'new-password':\r\n                formData = JSON.stringify({ password, token })\r\n                break;\r\n            case 'reset-password-link':\r\n                formData = JSON.stringify({ email })\r\n                break;\r\n            case 'account-verify':\r\n                formData = JSON.stringify({ token })\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        dispatch(authEndPoint(url, 'POST', formData, { 'Content-Type': 'application/json' }))\r\n        setRedirect(true);\r\n    }\r\n\r\n    return (\r\n    <>\r\n    { (authSuccess) && <ShowToast msg={authSuccess} />}\r\n    { (authError) && <ShowToast msg={authError} />}\r\n\r\n    <div className=\"another-bg\">\r\n        <div className=\"error-content-bg\"></div>\r\n        <div className=\"error-content-container d-flex justify-content-center align-items-center\">\r\n        <div className=\"content-centered m-auto shadow p-3 p-sm-4 bg-light border rounded text-center\">\r\n            <i className={`${icon} fa-3x mb-2`}></i>\r\n            <h4>{heading}</h4>\r\n            <div className=\"mt-4 mt-sm-5\">\r\n            {txt && <p className=\"text-muted my-2\">{txt}</p> }\r\n            {\r\n                showInputs &&\r\n                <>\r\n                {\r\n                token ?\r\n                <input \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={e => setPassword(e.target.value)} \r\n                    placeholder={inputText} \r\n                    className=\"form-control mt-2 mt-sm-3\" \r\n                />\r\n                :\r\n                <input \r\n                    type=\"email\" \r\n                    value={email} \r\n                    onChange={e => setEmail(e.target.value)} \r\n                    placeholder={inputText} \r\n                    className=\"form-control mt-2 mt-sm-3\" \r\n                />\r\n                }\r\n                </>\r\n            }\r\n            <button onClick={activeAccount} className={`btn btn-info btn-sm ${!txt && 'btn-block mt-2'}`}>\r\n                {btnText}\r\n            </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AuthEssentials\r\n"],"sourceRoot":""}