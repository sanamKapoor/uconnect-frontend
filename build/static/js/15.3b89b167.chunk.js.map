{"version":3,"sources":["Layout/Pages/Login.js","Layout/components/Common/UIElements/InputElement.js"],"names":["Login","dispatch","useDispatch","useSelector","state","auth","loading","authError","authSuccess","useState","email","setEmail","password","setPassword","useEffect","authErrorMsg","timer","setTimeout","clearTimeout","className","onSubmit","e","preventDefault","trim","formData","JSON","stringify","authEndPoint","href","process","inputType","inputName","inputValue","onChangeHandler","target","value","inputText","classes","minLength","maxLength","type","to","InputElement","inputRef","onKeyPressHandler","checkText","name","ref","onChange","onKeyPress","regex","RegExp","str","String","fromCharCode","charCode","which","test","placeholder"],"mappings":"yKAuGeA,UAhGf,WAEI,IAAMC,EAAWC,cACjB,EAA4CC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA/DC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,YAE5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwCA,OAtCAC,qBAAU,WACa,KAAhBN,GAAoC,KAAdD,IACrBI,EAAS,IACTE,EAAY,OAEjB,CAACN,EAAWC,IAEfM,qBAAU,WACNb,EAASc,YAAa,OACvB,CAACd,IAEJa,qBAAU,WACN,IAAME,EAAQC,YAAW,WACrBV,GAAaN,EAASc,YAAa,OAClC,KAEH,OAAO,WACLG,aAAaF,MAElB,CAACf,EAAUM,IAoBV,yBAAKY,UAAU,gBACf,6BAASA,UAAU,SACf,0BAAMC,SApBQ,SAAAC,GAGlB,GAFAA,EAAEC,iBAEkB,KAAjBZ,EAAMa,QAAqC,KAApBX,EAASW,OAAnC,CAKA,IAAMC,EAAWC,KAAKC,UAAU,CAC5BhB,QACAE,aAGJX,EAAS0B,YAAa,cAAe,OAAQH,EAAU,CAAE,eAAgB,2BATrEvB,EAASc,YAAa,qCAgBSI,UAAU,yDACrC,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,QACX,0CAEJ,uBAAGA,UAAU,qCAAb,wDACA,uBAAGS,KAAI,UAAKC,gCAAL,gBAAsDV,UAAU,qCAAoC,uBAAGA,UAAU,8CAAxH,uBAEJ,6BACI,kBAAC,IAAD,CACIW,UAAU,QACVC,UAAU,QACVC,WAAYtB,EACZuB,gBAAiB,SAAAZ,GAAC,OAAIV,EAASU,EAAEa,OAAOC,QACxCC,UAAU,sBACVC,QAAQ,sBAEZ,kBAAC,IAAD,CACIP,UAAU,WACVC,UAAU,WACVK,UAAU,yBACVC,QAAQ,oBACRL,WAAYpB,EACZqB,gBAAiB,SAAAZ,GAAC,OAAIR,EAAYQ,EAAEa,OAAOC,QAC3CG,UAAW,EACXC,UAAW,KAGXhC,GACA,0BAAMY,UAAU,2BACXZ,GAGT,4BAAQiC,KAAK,SAASrB,UAAU,2CAC3Bb,EAAU,iBAAmB,UAGtC,yBAAKa,UAAU,kCACX,kBAAC,IAAD,CAAMsB,GAAG,UAAUtB,UAAU,kBAA7B,sBACA,kBAAC,IAAD,CAAMsB,GAAG,iBAAiBtB,UAAU,kBAApC,0B,gCC/FpB,oBA8BeuB,IA5Bf,YAA8J,IAAvIZ,EAAsI,EAAtIA,UAAWa,EAA2H,EAA3HA,SAAUZ,EAAiH,EAAjHA,UAAWC,EAAsG,EAAtGA,WAAYM,EAA0F,EAA1FA,UAAWC,EAA+E,EAA/EA,UAAWN,EAAoE,EAApEA,gBAAiBW,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,UAAWT,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAY/I,OACQ,2BACIG,KAAMV,EACNgB,KAAMf,EACNI,MAAOH,EACPM,UAAWA,EACXC,UAAWA,EACXQ,IAAKJ,EACLK,SAAUf,EACVgB,WAAYJ,EAnBE,SAAAxB,GACtB,IAAI6B,EAAQ,IAAIC,OAAO,qCACnBC,EAAMC,OAAOC,aAAcjC,EAAEkC,SAAqBlC,EAAEkC,SAAZlC,EAAEmC,OAC9C,QAAIN,EAAMO,KAAKL,KAGf/B,EAAEC,kBACK,IAY6CsB,EAC5CzB,UAAWkB,EACXqB,YAAatB","file":"static/js/15.3b89b167.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport InputElement from '../components/Common/UIElements/InputElement';\r\nimport { authEndPoint, authErrorMsg } from '../../redux/actions/authActions';\r\n\r\nfunction Login() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { loading, authError, authSuccess } = useSelector(state => state.auth);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(authSuccess !== '' && authError === ''){\r\n            setEmail('')\r\n            setPassword('')\r\n        }\r\n    }, [authError, authSuccess])\r\n\r\n    useEffect(() => {\r\n        dispatch(authErrorMsg(''))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            authError && dispatch(authErrorMsg(''))\r\n          }, 2000)\r\n    \r\n          return () => {\r\n            clearTimeout(timer);\r\n          }\r\n    }, [dispatch, authError])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            dispatch(authErrorMsg('Please provide auth credentials'))\r\n            return;\r\n        }\r\n\r\n        const formData = JSON.stringify({\r\n            email,\r\n            password\r\n        })\r\n\r\n        dispatch(authEndPoint('/auth/login', 'POST', formData, { 'Content-Type': 'application/json' }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-section\">\r\n        <section className=\"login\">\r\n            <form onSubmit={submitHandler} className=\"form p-3 p-sm-4 p-md-5 text-center bg-light mx-2 my-3\">\r\n                <div className=\"pb-md-4 pb-sm-3 pb-2\">\r\n                    <div className=\"logo\">\r\n                        <h1>UConnect </h1>\r\n                    </div>\r\n                    <p className=\"text-muted w-75 mx-auto welcome-p\">Share your enjoying moments with friends and family!</p>\r\n                    <a href={`${process.env.REACT_APP_BACKEND_URL}/auth/google`} className=\"btn btn-light rounded-pill shadow\"><i className=\"fab fa-google text-secondary mr-1 mr-sm-2\"></i> Login with Google</a>\r\n                </div>\r\n                <div>\r\n                    <InputElement \r\n                        inputType=\"email\" \r\n                        inputName=\"email\" \r\n                        inputValue={email}\r\n                        onChangeHandler={e => setEmail(e.target.value)}\r\n                        inputText=\"ðŸ“§  Email\" \r\n                        classes=\"form-control my-3\" \r\n                    />\r\n                    <InputElement \r\n                        inputType=\"password\" \r\n                        inputName=\"password\" \r\n                        inputText=\"ðŸ”’  Password\" \r\n                        classes=\"form-control my-3\"\r\n                        inputValue={password}\r\n                        onChangeHandler={e => setPassword(e.target.value)} \r\n                        minLength={5}\r\n                        maxLength={20}\r\n                    />\r\n                    {\r\n                        authError && \r\n                        <span className=\"text-danger text-center\"> \r\n                            {authError}\r\n                        </span>\r\n                    }\r\n                    <button type=\"submit\" className=\"btn btn-block btn-secondary shadow my-3\">\r\n                        {loading ? 'Please wait...' : 'Login' }\r\n                    </button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <Link to=\"/signup\" className=\"text-secondary\">Create an account?</Link>\r\n                    <Link to=\"/resetPassword\" className=\"text-secondary\">Forget Password?</Link>\r\n                </div>\r\n            </form>\r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nfunction InputElement({inputType, inputRef, inputName, inputValue, minLength, maxLength, onChangeHandler, onKeyPressHandler, checkText, inputText, classes}) {\r\n\r\n    const inputRestrictions = e => {\r\n        var regex = new RegExp(/^[ A-Za-z0-9_!@#$&():;\"',./?|-]*$/);\r\n        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);\r\n        if (regex.test(str)) {\r\n           return true;\r\n        }\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    return (\r\n            <input \r\n                type={inputType} \r\n                name={inputName} \r\n                value={inputValue}\r\n                minLength={minLength}\r\n                maxLength={maxLength}\r\n                ref={inputRef}\r\n                onChange={onChangeHandler}\r\n                onKeyPress={checkText ? inputRestrictions : onKeyPressHandler}\r\n                className={classes} \r\n                placeholder={inputText} \r\n            />\r\n    )\r\n}\r\n\r\nexport default InputElement\r\n"],"sourceRoot":""}