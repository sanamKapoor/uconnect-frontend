{"version":3,"sources":["Layout/components/Common/UIElements/Footer.js","Layout/components/Post/SinglePost.js","Layout/components/Common/HomeLayout.js","Layout/Pages/HomePage.js","Layout/components/Modal/ModalHeader.js","redux/actions/userActions.js","Layout/components/Common/UIElements/MediaUploader.js","Layout/components/Common/CreatePostForm.js","Layout/components/User/SuggestedUser.js","Layout/components/Modal/UsersModal.js","Layout/components/Modal/CreatePostModal.js","Layout/components/Common/MainNavLinks.js","Layout/components/Common/MainHeader.js","Layout/components/Common/UIElements/VideoPlayer.js","Layout/hooks/write-comment-hook.js","Layout/components/Common/WriteCommentForm.js","Layout/components/Common/UIElements/ShowSearchResults.js","Layout/components/Common/UIElements/ShowSearchInputOrNot.js","Layout/hooks/search-users-hook.js","Layout/components/Common/UIElements/Comment.js","Layout/components/Modal/PostModal.js"],"names":["Footer","useSelector","state","post","posts","postError","postLoading","length","className","role","aria-label","SinglePost","dispatch","useDispatch","user","userId","auth","useState","postModal","setPostModal","usersModal","setUsersModal","likeBtn","setLikeBtn","showComment","setShowComment","useEffect","likes","comments","u","text","creator","_id","to","ShowImage","src","image","classes","username","onClick","backendReqModal","mediaFile","isVideo","VideoPlayer","filePath","height","url","file","fileName","fileDownload","caption","width","WriteCommentForm","postId","PostModal","show","onHide","UsersModal","propsUsers","errorText","HomeLayout","fetchPostAgain","users","modal","modalErrorMsg","modalSuccessMsg","useSearchUserHook","userFound","searchResults","searchUser","setSearchUser","setUserFound","showSearchUserHandler","connectionsPost","setConnectionsPost","fetchPostData","fetchUserData","showErrorToastFun","showSuccessToastFun","fetchPostAgainFun","socket","openSocket","process","on","data","action","updatePost","updateUser","timer","setTimeout","modalMsg","modalError","clearTimeout","Loading","map","key","ShowSearchInputOrNot","ShowSearchResults","showOption","HomePage","showSuccessToast","showErrorToast","postErrors","userErrors","ShowToast","msg","MainHeader","ModalHeader","userLoading","isLoading","type","Actions","payload","err","userSuccess","getUsers","getUser","updateOtherUser","method","body","headers","token","localStorage","getItem","fetch","res","json","ok","Error","message","ImageUploader","fileHandler","disable","filePickerRef","createRef","name","ref","style","accept","onChange","disabled","current","click","CreatePostForm","parent","formRef","modalLoading","modalHeight","setModalHeight","setCaption","setMediaFile","mediaUrl","setMediaUrl","mediaId","setMediaId","mediaName","setMediaName","setDisable","document","querySelector","clientHeight","onSubmit","e","preventDefault","postData","JSON","stringify","inputName","inputText","inputType","inputValue","onChangeHandler","target","value","minLength","maxLength","checkText","files","FormData","append","then","secure_url","public_id","catch","SuggestedUser","usr","isFollow","setIsFollow","connections","found","Users","props","isAdmin","selectedUsers","setSelectedUsers","options","setOptions","l","prev","aria-labelledby","scrollable","centered","Header","closeButton","Title","id","Body","CreatePostModal","Modal","MainNavLinks","createPost","setCreatePost","logOutUser","href","data-toggle","data-target","aria-controls","aria-expanded","controlsList","muted","controls","autoPlay","loop","useCommentHook","comment","setComment","commentObj","writeComment","InputElement","onKeyPressHandler","setSearchResults","filter","Comment","commentedUser","setCommentedUser","img","setImg","showDeleteBtn","setShowDeleteBtn","size"],"mappings":"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","file":"static/js/8.e45b9b92.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Footer() {\r\n\r\n    const { posts, postError, postLoading } = useSelector(state => state.post);\r\n\r\n    if(!postError && !postLoading && posts.length > 0){\r\n        return (\r\n            <footer className=\"container-fluid container-sm border-top py-2 mb-5 mb-lg-0 mt-2\">\r\n                <p className=\"float-right mb-5 mb-lg-2\">Made with <span role=\"img\" aria-label=\"heart\">❤️</span> By Sanam Kapoor</p>\r\n            </footer>\r\n        )\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PostModal from '../Modal/PostModal';\r\nimport UsersModal from '../Modal/UsersModal';\r\nimport VideoPlayer from '../Common/UIElements/VideoPlayer';\r\nimport ShowImage from '../Common/UIElements/ShowImage';\r\nimport WriteCommentForm from '../Common/WriteCommentForm';\r\n\r\nimport { fileDownload } from '../../../redux/actions/postActions';\r\nimport { backendReqModal } from '../../../redux/actions/modalActions';\r\n\r\nfunction SinglePost({post}) {\r\n\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user)\r\n    const { userId } = useSelector(state => state.auth)\r\n\r\n    const [postModal, setPostModal] = useState(false);\r\n    const [usersModal, setUsersModal] = useState(false);\r\n    const [likeBtn, setLikeBtn] = useState(false)\r\n    const [showComment, setShowComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        setLikeBtn(false);\r\n\r\n        for(let user of post.likes){\r\n            if(user === userId){\r\n                setLikeBtn(true)\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let u of post.comments){\r\n            if(u.user === userId){\r\n                setShowComment(u.text);\r\n                break;\r\n            } else {\r\n                setShowComment('');\r\n            }\r\n        }\r\n\r\n    }, [post, userId, dispatch])\r\n\r\n    const likeHandler = () => {\r\n        dispatch(backendReqModal(`/post/${post._id}/${userId}/like-unlike`, 'POST'))\r\n    }\r\n\r\n    const fileDownloadHandler = (url, file) => {\r\n        dispatch(fileDownload(url, file))\r\n    }\r\n\r\n    const deleteMyComment = () => {\r\n        dispatch(backendReqModal(`/post/${post._id}/${userId}/comment`, 'DELETE'))\r\n    }\r\n\r\n    const blockUser = () => {\r\n        dispatch(backendReqModal(`/user/${post.creator._id}/block/${userId}`, 'POST'))\r\n    }\r\n\r\n    if(post.creator?._id !== userId){\r\n    return (\r\n        <>\r\n        <div className=\"post shadow mb-4\">\r\n                <div className=\"post-header p-2 d-flex justify-content-between align-items-center\">\r\n                    <Link to={`/profile/${post.creator?._id}`} className=\"post-user pointer text-dark text-decoration-none\">\r\n                        <ShowImage src={post.creator?.image} classes=\"rounded-circle mr-1 header-user-img\" /> {post.creator?.username}\r\n                    </Link>\r\n                    <div className=\"text-info mr-2 pointer\" onClick={blockUser}>Block</div>\r\n                </div>\r\n                <div className=\"post-content\">\r\n                {\r\n                    post.mediaFile.isVideo ?\r\n                    <VideoPlayer src={post.mediaFile.filePath} classes=\"post-image\" height=\"100%\" />\r\n                    : \r\n                    <ShowImage src={post.mediaFile.filePath} classes=\"post-image\" />\r\n                }\r\n                </div>\r\n                <div className=\"post-metadata p-2\">\r\n                    <div className=\"post-buttons d-flex justify-content-between align-items-center\">\r\n                        <div>\r\n                            <i className={`fas fa-heart ${likeBtn ? 'text-danger' : 'text-secondary'} mx-1 post-icon`} onClick={likeHandler}></i>\r\n                            <i className=\"far fa-comment text-dark mx-1 post-icon\" onClick={() => setPostModal(true)}></i>\r\n                        </div>\r\n                        <i className=\"fas fa-download text-dark post-icon\" onClick={() => fileDownloadHandler(post.mediaFile.filePath, post.mediaFile.fileName)}></i>\r\n                    </div>\r\n                    {\r\n                        post.likes.length > 0 &&\r\n                        <>\r\n                            <small className=\"font-weight-bold pointer\" onClick={() => setUsersModal(true)}>\r\n                            Liked by {post.likes.length} people</small>\r\n                            <br/>\r\n                        </>\r\n                    }\r\n                    <small className=\"text-break\">{post.caption}</small>\r\n                    <br />\r\n                    {\r\n                        (showComment && user && post.comments.length > 0) ?\r\n                        <small>\r\n                            <ShowImage src={user.image} width=\"20\" height=\"20\" classes=\"rounded-circle mr-1\" /> \r\n                            {user.username}\r\n                            <span className=\"font-weight-bold text-secondary text-break\"> {showComment} <i className=\"far fa-trash-alt text-danger ml-2 pointer\" onClick={deleteMyComment}></i></span>\r\n                        </small>\r\n                        : ''\r\n                    }\r\n                    <WriteCommentForm \r\n                        postId={post._id}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <PostModal\r\n                show={postModal}\r\n                onHide={() => setPostModal(false)}\r\n                post={post}\r\n            />\r\n            \r\n            <UsersModal\r\n                show={usersModal}\r\n                onHide={() => setUsersModal(false)}\r\n                propsUsers={post.likes}\r\n                errorText=\"No User Found.\"\r\n            />\r\n        </>\r\n    )\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport default SinglePost\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport SinglePost from '../Post/SinglePost'\r\nimport Loading from '../Common/UIElements/Loading';\r\nimport ShowSearchResults from './UIElements/ShowSearchResults';\r\nimport ShowSearchInputOrNot from './UIElements/ShowSearchInputOrNot';\r\n\r\nimport useSearchUserHook from '../../hooks/search-users-hook';\r\nimport { fetchPostData, updatePost, fetchPostAgainFun } from '../../../redux/actions/postActions';\r\nimport { fetchUserData, updateUser } from '../../../redux/actions/userActions';\r\nimport { modalMsg, modalError, showErrorToastFun, showSuccessToastFun } from '../../../redux/actions/modalActions';\r\n\r\nfunction HomeLayout() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { postError, postLoading, posts, fetchPostAgain } = useSelector(state => state.post);\r\n    const { users } = useSelector(state => state.user);\r\n    const { userId } = useSelector(state => state.auth);\r\n    const { modalErrorMsg, modalSuccessMsg } = useSelector(state => state.modal);\r\n\r\n    const [ userFound, searchResults, searchUser, setSearchUser, setUserFound, showSearchUserHandler ] = useSearchUserHook();\r\n    const [connectionsPost, setConnectionsPost] = useState([])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPostData(`/post/show-posts/${userId}`))\r\n        dispatch(fetchUserData(`/user/${userId}`))\r\n        dispatch(showErrorToastFun(true))\r\n        dispatch(showSuccessToastFun(false))\r\n        dispatch(fetchPostAgainFun(true))\r\n    }, [dispatch, userId])\r\n\r\n    useEffect(() => {\r\n        if(posts){\r\n            setConnectionsPost(posts)\r\n        }\r\n    }, [posts])\r\n\r\n    useEffect(() => {\r\n            const socket = openSocket(process.env.REACT_APP_BACKEND_URL);\r\n            socket.on('posts', data => {\r\n                if(data.action === 'GetPost'){\r\n                    dispatch(updatePost(data.data))\r\n                }\r\n            })\r\n            socket.on('users', data => {\r\n                if(data.action === 'ConnectOrBlockUser' && fetchPostAgain){\r\n                    dispatch(updateUser(data.user))\r\n                    dispatch(fetchPostData(`/post/show-posts/${userId}`))\r\n                }\r\n            })\r\n    }, [dispatch, userId, fetchPostAgain])\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          modalSuccessMsg && dispatch(modalMsg(''))\r\n          modalErrorMsg && dispatch(modalError(''))\r\n        }, 2000)\r\n  \r\n        return () => {\r\n          clearTimeout(timer);\r\n        }\r\n      }, [dispatch, modalErrorMsg, modalSuccessMsg])\r\n\r\n    return (\r\n    <>\r\n    <div className=\"container-fluid container-md mt-5\">\r\n        <div className=\"row no-gutters mx-1 mx-sm-3 mx-md-4\">\r\n            <div className={`col-12 col-lg-7 post-area mt-5`}>\r\n                {\r\n                    (postError) && <p className=\"text-center\">{postError}</p>\r\n                }\r\n                {\r\n                    (postLoading) && <div className=\"text-center\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                {\r\n                    (!postError && !postLoading && connectionsPost.length > 0) &&\r\n                    connectionsPost.map(post => {\r\n                        return <SinglePost key={post._id} post={post} />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"col-5 mt-5 d-none d-lg-block\">\r\n            { \r\n                ( users.length > 0) &&\r\n                <div className=\"suggested-users shadow w-75 mx-auto p-3 rounded-lg\">\r\n                    <ShowSearchInputOrNot\r\n                        users={users} \r\n                        userId={userId} \r\n                        searchUser={searchUser}\r\n                        setSearchUser={setSearchUser}\r\n                        setUserFound={setUserFound}\r\n                        showSearchUserHandler={showSearchUserHandler}\r\n                    />\r\n                    <div className=\"suggested-users-list\" >\r\n                        <ShowSearchResults \r\n                            users={users} \r\n                            userId={userId}\r\n                            userFound={userFound}\r\n                            searchUser={searchUser}\r\n                            searchResults={searchResults}\r\n                            showOption={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HomeLayout\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MainHeader from '../components/Common/MainHeader'\r\nimport Footer from '../components/Common/UIElements/Footer';\r\nimport HomeLayout from '../components/Common/HomeLayout'\r\nimport ShowToast from '../components/Common/UIElements/ShowToast';\r\n\r\nimport { postErrors } from '../../redux/actions/postActions';\r\nimport { userErrors } from '../../redux/actions/userActions';\r\n\r\nconst HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { modalSuccessMsg, modalErrorMsg, showSuccessToast, showErrorToast } = useSelector(state => state.modal);\r\n\r\n  useEffect(() => {\r\n    dispatch(postErrors(''))\r\n    dispatch(userErrors(''))\r\n  }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n          { (modalSuccessMsg && showSuccessToast) && <ShowToast msg={modalSuccessMsg} /> }\r\n          { (modalErrorMsg && showErrorToast) && <ShowToast msg={modalErrorMsg} /> }\r\n          <MainHeader />\r\n          <HomeLayout />\r\n          <Footer />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ShowImage from '../Common/UIElements/ShowImage';\r\n\r\nfunction ModalHeader() {\r\n    const  { user } = useSelector(state => state.user);\r\n    \r\n    return (\r\n        <>\r\n            <ShowImage src={user.image} width=\"30\" height=\"30\" classes=\"rounded-circle mr-1\" /> <span>{user.username}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalHeader\r\n","import * as Actions from '../types/userTypes';\r\n\r\nconst userLoading = (isLoading) => {\r\n    return {\r\n        type: Actions.USER_LOADING,\r\n        payload: isLoading\r\n    }   \r\n}\r\n\r\nexport const userErrors = (err) => {\r\n    return {\r\n        type: Actions.USER_ERRORS,\r\n        payload: err\r\n    }   \r\n}\r\n\r\nconst userSuccess = msg => {\r\n    return {\r\n        type: Actions.USER_SUCCESS_MSG,\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const getUsers = (users) => {\r\n    return {\r\n        type: Actions.GET_USERS,\r\n        payload: users\r\n    }   \r\n}\r\n\r\nexport const getUser = (user) => {\r\n    return {\r\n        type: Actions.GET_USER,\r\n        payload: user\r\n    }   \r\n}\r\n\r\nexport const updateUser = (user) => {\r\n    return {\r\n        type: Actions.UPDATE_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const updateOtherUser = user => {\r\n    return {\r\n        type: Actions.UPDATE_OTHER_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\n//      Backend End-Point\r\nexport const fetchUserData = (url, method = 'GET', body = null, headers) => async dispatch => {\r\n\r\n    if(method === 'GET'){\r\n        dispatch(userLoading(true));\r\n    }\r\n    try {\r\n        const token = localStorage.getItem('jwtToken');\r\n\r\n        const res = await fetch(process.env.REACT_APP_BACKEND_URL + url, {\r\n            method,\r\n            body,\r\n            headers: {\r\n                ...headers,\r\n                'Authorization': 'Bearer ' + token \r\n            }\r\n        })   \r\n\r\n        const data = await res.json();\r\n\r\n        if(!res.ok){\r\n            throw new Error(data.message)\r\n        }\r\n\r\n        dispatch(userLoading(false));\r\n\r\n        const { users, user, msg } = data;\r\n\r\n        if(users){\r\n            dispatch(getUsers(users))\r\n        }\r\n        if(user){\r\n            dispatch(getUser(user))\r\n        }\r\n        if(!user && !users && msg){\r\n            dispatch(userSuccess(msg))\r\n        }\r\n    } catch (err) {\r\n        dispatch(userLoading(false))\r\n        err.message ? dispatch(userErrors(err.message)) : dispatch(userErrors(err))\r\n    }\r\n}\r\n","import React, { createRef } from 'react'\r\n\r\nfunction ImageUploader({mediaFile, fileHandler, disable}) {\r\n    const filePickerRef = createRef();\r\n\r\n    const pickerFileHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-upload my-2 my-sm-3\">\r\n            <span className=\"text-muted text-center px-2\">\r\n                { mediaFile ? mediaFile.name : 'Select any image file' }\r\n            </span>\r\n            <input \r\n                type=\"file\"\r\n                ref={filePickerRef}\r\n                style={{\"display\": \"none\"}}\r\n                accept=\".jpg,.jpeg,.png\"\r\n                onChange={fileHandler}\r\n                />\r\n            <button type=\"button\" disabled={disable} onClick={pickerFileHandler} className=\"btn btn-secondary btn-sm my-2\">Upload</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUploader\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { backendReqModal, modalError, showErrorToastFun, showSuccessToastFun } from '../../../redux/actions/modalActions';\r\n\r\nimport ImageUploader from './UIElements/MediaUploader';\r\nimport Loading from './UIElements/Loading';\r\nimport InputElement from './UIElements/InputElement';\r\n\r\nfunction CreatePostForm({userId, parent}) {\r\n\r\n    const formRef = createRef();\r\n    const dispatch = useDispatch();\r\n    const { modalLoading, modalErrorMsg, modalSuccessMsg } = useSelector(state => state.modal);\r\n\r\n    const [modalHeight, setModalHeight] = useState(0);\r\n    const [caption, setCaption] = useState('');\r\n    const [mediaFile, setMediaFile] = useState(null);\r\n    const [mediaUrl, setMediaUrl] = useState('');\r\n    const [mediaId, setMediaId] = useState('');\r\n    const [mediaName, setMediaName] = useState('');\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let height;\r\n        if(parent === 'modal'){\r\n            height = document.querySelector('.modal-body').clientHeight;\r\n        } else {\r\n            height = document.querySelector('form').clientHeight;\r\n        }\r\n        setModalHeight(height)\r\n    }, [parent])\r\n\r\n    useEffect(() => {\r\n        if(modalErrorMsg === '' && modalSuccessMsg !== ''){\r\n            setCaption('')\r\n            setMediaFile(null)\r\n        }\r\n\r\n    }, [modalErrorMsg, modalSuccessMsg])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(showErrorToastFun(false));\r\n        dispatch(showSuccessToastFun(true));\r\n\r\n        const postData = JSON.stringify({\r\n            caption,\r\n            mediaFile: {\r\n                mediaId: mediaId,\r\n                fileName: mediaName,\r\n                filePath: mediaUrl\r\n            },\r\n            creator: userId\r\n        })\r\n\r\n        dispatch(backendReqModal('/post/create', 'POST', postData, {\r\n            'Content-Type': 'application/json'\r\n        }));\r\n\r\n    }\r\n\r\n    const fileHandler = e => {\r\n        if(e.target.files && e.target.files.length === 1){\r\n\r\n            setMediaFile(e.target.files[0])\r\n            const file = e.target.files[0];\r\n\r\n            if(file.type === \"image/jpg\" || file.type === \"image/png\" || file.type === \"image/jpeg\") {\r\n\r\n            setDisable(true);\r\n            const data = new FormData()\r\n            data.append(\"file\", file)\r\n            data.append(\"upload_preset\", process.env.REACT_APP_PRESET)\r\n            data.append(\"cloud_name\", process.env.REACT_APP_CLOUD_NAME)\r\n\r\n            fetch(`${process.env.REACT_APP_CLOUDINARY_URL}/${process.env.REACT_APP_CLOUD_NAME}/image/upload`, {\r\n                method:\"post\",\r\n                body: data\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMediaUrl(data.secure_url)\r\n                setMediaId(data.public_id)\r\n                setMediaName(file.name)\r\n                setDisable(false);\r\n                dispatch(modalError(''))\r\n            })\r\n            .catch(err=> {\r\n                dispatch(modalError('Something went wrong'))\r\n            })\r\n         } else {\r\n            dispatch(modalError('Invalid file type'))\r\n            return;\r\n         }\r\n        }\r\n    }\r\n\r\n\r\n    if(modalLoading){\r\n        return <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{height: `${modalHeight}px`}}>\r\n            <Loading />\r\n            <span className=\"my-2\">Please wait...</span>\r\n        </div>\r\n    } else {\r\n        return (\r\n        <form className=\"form p-0 p-sm-2 text-center\" ref={formRef} onSubmit={submitHandler}>\r\n            <InputElement \r\n                inputName=\"caption\"\r\n                inputText=\"Caption\"\r\n                inputType=\"text\"\r\n                inputValue={caption}\r\n                onChangeHandler={e => setCaption(e.target.value)}\r\n                classes=\"form-control\"\r\n                minLength=\"5\"\r\n                maxLength=\"200\"\r\n                checkText={true} \r\n            />\r\n            <ImageUploader \r\n                mediaFile={mediaFile}\r\n                fileHandler={fileHandler}\r\n                disable={disable}\r\n            />\r\n            { \r\n            (modalErrorMsg) && \r\n                <span className=\"text-danger my-2\"> \r\n                    {modalErrorMsg === 'Invalid value' ? 'Please provide both fields' : modalErrorMsg}\r\n                </span>\r\n             }\r\n            <button type=\"submit\" disabled={disable} className=\"btn btn-secondary btn-block mt-2 mt-sm-3\">\r\n                { disable ? 'Please wait...' : 'Create Post'}\r\n            </button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nexport default CreatePostForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { backendReqModal, showSuccessToastFun } from '../../../redux/actions/modalActions';\r\nimport ShowImage from '../Common/UIElements/ShowImage';\r\n\r\nfunction SuggestedUser({ usr, showOption }) {\r\n\r\n    const { user } = useSelector(state => state.user);\r\n    const { userId } = useSelector(state => state.auth);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [isFollow, setIsFollow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user.connections){\r\n            let found = false;\r\n            if(user.connections.length > 0){\r\n                for(let u of user.connections){\r\n                    if(u === usr._id){\r\n                        found = true;\r\n                        break;\r\n                    } \r\n                }\r\n            }\r\n\r\n            if(found){\r\n                setIsFollow(false);\r\n            } else {\r\n                setIsFollow(true);\r\n            }\r\n        } \r\n        \r\n    }, [user.connections, usr])\r\n\r\n    const followAndBlockHandler = () => {\r\n        dispatch(showSuccessToastFun(false));\r\n        \r\n        if(isFollow){\r\n            dispatch(backendReqModal(`/user/${usr._id}/connect/${userId}`, 'POST'))\r\n        } else {\r\n            dispatch(backendReqModal(`/user/${usr._id}/block/${userId}`, 'POST'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row no-gutters d-flex justify-content-between align-items-center my-3\">\r\n            <Link to={`/profile/${usr._id}`} className=\"post-user pointer text-dark text-decoration-none\">\r\n                <ShowImage src={usr.image} width=\"30\" height=\"30\" classes=\"rounded-circle mr-1\" />\r\n                <span>{usr.username}</span>\r\n            </Link>\r\n            {\r\n                (showOption && usr._id !== userId)  &&\r\n                <>\r\n                    <small \r\n                        className=\"text-info mr-2 pointer\" \r\n                        onClick={followAndBlockHandler}>\r\n                            { isFollow ? 'Connect' : 'Block'}\r\n                    </small>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestedUser\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SuggestedUser from '../User/SuggestedUser'\r\nimport ModalHeader from './ModalHeader';\r\n\r\nfunction Users(props) {\r\n\r\n    const { show, onHide, propsUsers , isAdmin, errorText } = props;\r\n    const { users } = useSelector(state => state.user)\r\n\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [options, setOptions] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n      if(isAdmin){\r\n        setOptions(true)\r\n      }\r\n\r\n      if(propsUsers){\r\n        setSelectedUsers([])\r\n        for(let u of users){\r\n          for(let l of propsUsers){\r\n            if(u._id === l){\r\n              setSelectedUsers(prev => [...prev, u])\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    }, [propsUsers, users, isAdmin])\r\n\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby=\"contained-modal-title-vcenter-2\"\r\n        scrollable\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"h6\" id=\"contained-modal-title-vcenter\">\r\n            <ModalHeader />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"py-1 post-likes\">\r\n          <div className=\"search-and-suggested-users\">\r\n            {\r\n              selectedUsers.length > 0 ?\r\n              selectedUsers.map(u => {\r\n                return <SuggestedUser key={u._id} usr={u} showOption={options} />\r\n              })\r\n              : \r\n              <p className=\"text-center text-muted py-3\">\r\n                <span>{errorText}</span>\r\n              </p>\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport ModalHeader from './ModalHeader';\r\nimport CreatePostForm from '../Common/CreatePostForm';\r\nimport { useEffect } from 'react';\r\nimport { showSuccessToastFun, showErrorToastFun } from '../../../redux/actions/modalActions';\r\n\r\nfunction CreatePostModal({ show, onHide }) {\r\n  \r\n    const dispatch = useDispatch();\r\n    const { userId } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n      if(show){\r\n        dispatch(showErrorToastFun(false))\r\n        dispatch(showSuccessToastFun(true))\r\n      } else {\r\n        dispatch(showErrorToastFun(true))\r\n        dispatch(showSuccessToastFun(false))\r\n      }\r\n    }, [show, dispatch])\r\n\r\n    return (\r\n      <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"h6\" id=\"contained-modal-title-vcenter\">\r\n            <ModalHeader />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CreatePostForm userId={userId} parent=\"modal\" />\r\n        </Modal.Body>\r\n      </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n export default CreatePostModal;","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CreatePostModal from '../Modal/CreatePostModal';\r\nimport { logOutUser } from '../../../redux/actions/authActions';\r\n\r\nfunction MainNavLinks() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [createPost, setCreatePost] = useState(false);\r\n    const { userId } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n      dispatch(logOutUser())\r\n      fetch('/auth/logout');\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <div className=\"d-none d-lg-flex\">\r\n            <li className=\"nav-item\">\r\n              <span className=\"nav-link icon mx-2 btn\">\r\n                <i className=\"fas fa-upload fa-1x\" onClick={() => setCreatePost(true)}></i>\r\n              </span>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to={`/profile/${userId}`} className=\"nav-link icon mx-2\">\r\n                <i className=\"far fa-user fa-1x\"></i>\r\n              </NavLink>\r\n            </li>\r\n          </div>\r\n            <li className=\"nav-item align-self-center\">\r\n                <span className=\"nav-link mx-2 pointer\" onClick={logoutHandler}>\r\n                    Logout\r\n                </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <CreatePostModal \r\n          show={createPost}\r\n          onHide={() => setCreatePost(false)}\r\n          />\r\n      </>\r\n    )\r\n}\r\n\r\nexport default MainNavLinks\r\n","import React from 'react'\r\nimport MainNavLinks from './MainNavLinks'\r\n\r\nfunction MainHeader() {\r\n    return (\r\n    <header className=\"shadow-sm\">\r\n      <nav className=\"navbar navbar-expand navbar-light container-fluid container-md\">\r\n        <a className=\"navbar-brand font-weight-bold\" href=\"/\">UConnect </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <MainNavLinks />\r\n      </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\n\r\nfunction VideoPlayer({src, classes, height}) {\r\n    return (\r\n        <div style={{height: height}}>\r\n            <video src={src} controlsList=\"nodownload\" muted controls autoPlay loop className={classes} style={{height: height}}></video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { backendReqModal, showSuccessToastFun } from '../../redux/actions/modalActions';\r\n\r\nfunction useCommentHook() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { userId } = useSelector(state => state.auth);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const writeComment = (e, postId) => {\r\n        e.preventDefault();\r\n        dispatch(showSuccessToastFun(false))\r\n        \r\n        const commentObj = JSON.stringify({ \r\n            comment,\r\n            user: userId\r\n        })\r\n\r\n        dispatch(backendReqModal(`/post/${postId}/comment`, 'POST', commentObj, { 'Content-Type': 'application/json' }))\r\n        setComment('')\r\n    }\r\n\r\n    return [ comment, setComment, writeComment ]\r\n    \r\n}\r\n\r\nexport default useCommentHook\r\n","import React from 'react'\r\n\r\nimport useCommentHook from '../../hooks/write-comment-hook';\r\nimport InputElement from '../Common/UIElements/InputElement';\r\n\r\nfunction WriteCommentForm({postId}) {\r\n\r\n    const [comment, setComment, writeComment] = useCommentHook();\r\n\r\n    return (\r\n        <form className=\"comment-form\" onSubmit={e => writeComment(e, postId)}>\r\n            <InputElement \r\n                inputType=\"text\" \r\n                inputName=\"comment\" \r\n                inputValue={comment} \r\n                onChangeHandler={e => setComment(e.target.value)} \r\n                classes=\"border-0 w-75 my-2 comment\" \r\n                inputText=\"Add Comment\" \r\n                maxLength=\"100\"\r\n                checkText={false}\r\n            />\r\n            <button type=\"submit\" className=\"btn comment-form-btn text-muted float-right\">Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WriteCommentForm\r\n","import React from 'react';\r\n\r\nimport SuggestedUser from '../../User/SuggestedUser';\r\n\r\nfunction ShowSearchResults({ users, userId, userFound, searchResults, searchUser, showOption }){\r\n\r\n    return (\r\n    <>\r\n        {\r\n            (users.length > 0 && !searchUser) ? \r\n            users.map(user => {\r\n                if(user._id !== userId){\r\n                    return <SuggestedUser key={user._id} usr={user} showOption={showOption} />\r\n                }\r\n                return false;\r\n            })\r\n            : \r\n            (searchResults.length > 0) &&\r\n            searchResults.map(user => {\r\n                if(user._id !== userId){\r\n                    return <SuggestedUser key={user._id} usr={user} showOption={showOption} />\r\n                }\r\n                return false;\r\n            })\r\n        }\r\n        {\r\n            (!userFound) ? <div className=\"text-center\"><span>No User Found</span></div> : ''\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ShowSearchResults\r\n","import React from 'react';\r\n\r\nimport InputElement from './InputElement';\r\n\r\nfunction ShowSearchInputOrNot({ users, userId, searchUser, setSearchUser, setUserFound, showSearchUserHandler }) {\r\n    \r\n    if(users.length === 1 && users[0]._id === userId)  \r\n        return <div className=\"text-center\"><span>No User Found</span></div> \r\n    else {\r\n        return ( \r\n                <InputElement \r\n                    inputType=\"text\" \r\n                    inputName=\"search\" \r\n                    inputValue={searchUser} \r\n                    onChangeHandler={e => {\r\n                        setSearchUser(e.target.value)\r\n                        setUserFound(true)\r\n                    }} \r\n                    checkText={false}\r\n                    onKeyPressHandler={e => showSearchUserHandler(e)} \r\n                    classes=\"border-top-0 border-left-0 border-right-0  w-100 my-2 custom-input\"    \r\n                    inputText=\"Search Users... \" \r\n                />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowSearchInputOrNot;","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { fetchUserData } from '../../redux/actions/userActions';\r\n\r\nfunction useSearchUserHook() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { users } = useSelector(state => state.user);\r\n\r\n    const [searchUser, setSearchUser] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [userFound, setUserFound] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUserData('/user'))\r\n    }, [dispatch])\r\n\r\n    const showSearchUserHandler = (e) => {\r\n        setSearchResults([]);\r\n        // if(e.key === 'Enter'){\r\n            setUserFound(false)\r\n            users.filter(u => {\r\n                if(u.username === searchUser){\r\n                    setSearchResults(prev => [...prev, u]);\r\n                    setUserFound(true);\r\n                } \r\n                return false;\r\n            })\r\n        // }\r\n    }\r\n\r\n    return [ userFound, searchResults, searchUser, setSearchUser, setUserFound, showSearchUserHandler ]\r\n}\r\n\r\nexport default useSearchUserHook;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { backendReqModal, showSuccessToastFun } from '../../../../redux/actions/modalActions';\r\nimport ShowImage from './ShowImage';\r\n\r\nfunction Comment({ usr, postId, isAdmin }) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { users } = useSelector(state => state.user);\r\n    const { userId } = useSelector(state => state.auth);\r\n\r\n    const [commentedUser, setCommentedUser] = useState('');\r\n    const [img, setImg] = useState('');\r\n    const [showDeleteBtn, setShowDeleteBtn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        users.filter(u => {\r\n            if(u._id === usr.user){\r\n                setCommentedUser(u)\r\n            }\r\n            return false;\r\n        })\r\n\r\n        if(userId === usr.user || isAdmin){\r\n            setShowDeleteBtn(true)\r\n        }\r\n    }, [usr.user, userId, users, isAdmin])\r\n\r\n    useEffect(() => {\r\n        if(commentedUser){\r\n            setImg(commentedUser.image);\r\n        }\r\n    }, [commentedUser])\r\n\r\n    const deleteMyComment = () => {\r\n        dispatch(showSuccessToastFun(false))\r\n        if(isAdmin){\r\n            dispatch(backendReqModal(`/post/${postId}/${commentedUser._id}/${userId}/auth-comments`, 'DELETE'))\r\n        } else {\r\n            dispatch(backendReqModal(`/post/${postId}/${userId}/comment`, 'DELETE'))\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"post-user p-2\">\r\n                <ShowImage src={img} width=\"20\" height=\"20\" classes=\"rounded-circle mr-1\" />\r\n                <Link to={`/profile/${commentedUser._id}`} className=\"text-dark text-decoration-none\">\r\n                    <small>{commentedUser.username}</small>            \r\n                </Link>\r\n                <br />\r\n                <small className=\"text-muted text-break\">{usr.text} {showDeleteBtn && <i className=\"far fa-trash-alt float-right m-1 pointer\" onClick={deleteMyComment}></i>}</small>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport VideoPlayer from '../Common/UIElements/VideoPlayer';\r\nimport ShowImage from '../Common/UIElements/ShowImage';\r\nimport Comment from '../Common/UIElements/Comment';\r\nimport ModalHeader from './ModalHeader';\r\nimport WriteCommentForm from '../Common/WriteCommentForm';\r\nimport UsersModal from '../Modal/UsersModal';\r\n\r\nfunction PostModal(props) {\r\n\r\n    const { show, onHide, post, isAdmin } = props;\r\n    const [usersModal, setUsersModal] = useState(false);\r\n\r\n    return (\r\n      <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        scrollable\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"h6\" id=\"contained-modal-title-vcenter\">\r\n            <ModalHeader />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0\">\r\n        <div className=\"row no-gutters\">\r\n            <div className=\"col-12 col-lg-7 p-2\">\r\n                {\r\n                    post.mediaFile.isVideo ? \r\n                    <VideoPlayer src={post.mediaFile.filePath} classes=\"modal-image\" height=\"auto\" />\r\n                    : \r\n                    <ShowImage src={post.mediaFile.filePath} classes=\"modal-image\" />\r\n                }\r\n                <div className=\"modal-post-content\">\r\n                  {\r\n                    post.likes.length > 0 &&\r\n                    <>\r\n                    <small className='pb-2 font-weight-bold pointer' onClick={() => setUsersModal(true)}>Liked by {post.likes.length} people</small>\r\n                    <br />\r\n                    </>\r\n                  }\r\n                  <small className=\"text-break\">{post.caption}</small>\r\n                </div>\r\n            </div>\r\n              <div className=\"col-12 col-lg-5 d-flex flex-column justify-content-between px-2\">\r\n                <div className=\"all-comments order-1 order-lg-0\">\r\n                    {\r\n                      (post.comments.length > 0) ?\r\n                      post.comments.map(u => {\r\n                        return <Comment key={u._id} usr={u} postId={post._id} isAdmin={isAdmin} />\r\n                      })\r\n                      : \r\n                      <div className=\"d-none d-lg-flex justify-content-center align-items-center text-muted\">\r\n                        <span className=\"my-2\">No Comments</span>\r\n                      </div>\r\n                    }\r\n                </div>\r\n                <WriteCommentForm postId={post._id} />\r\n              </div>\r\n        </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n            <UsersModal\r\n                show={usersModal}\r\n                onHide={() => setUsersModal(false)}\r\n                propsUsers={post.likes}\r\n                errorText=\"No User Found.\"\r\n            />\r\n      </>\r\n    );\r\n  }\r\n  \r\n  \r\n export default PostModal;"],"sourceRoot":""}